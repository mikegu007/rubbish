<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.garbage.classify.dao.TmUserMapper">
  <resultMap id="BaseResultMap" type="com.garbage.classify.model.po.TmUser">
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="uuid" jdbcType="VARCHAR" property="uuid" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_sex" jdbcType="INTEGER" property="userSex" />
    <result column="user_image" jdbcType="VARCHAR" property="userImage" />
    <result column="user_mobile" jdbcType="VARCHAR" property="userMobile" />
    <result column="is_del" jdbcType="BIT" property="isDel" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="default_address_id" jdbcType="BIGINT" property="defaultAddressId" />
    <result column="open_id" jdbcType="VARCHAR" property="openId" />
  </resultMap>

  <sql id="Base_Column_List">
    id, uuid, user_name, user_sex, user_image, is_del, create_time, update_time, default_address_id,
    open_id
  </sql>

  <insert id="insertSelective" parameterType="com.garbage.classify.model.po.TmUser">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tm_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="uuid != null">
        uuid,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userSex != null">
        user_sex,
      </if>
      <if test="userImage != null">
        user_image,
      </if>
      <if test="userMobile != null">
        user_mobile,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="defaultAddressId != null">
        default_address_id,
      </if>
      <if test="openId != null">
        open_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=BIGINT},
      <if test="uuid != null">
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userSex != null">
        #{userSex,jdbcType=INTEGER},
      </if>
      <if test="userImage != null">
        #{userImage,jdbcType=VARCHAR},
      </if>
      <if test="userMobile != null">
        #{userMobile,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="defaultAddressId != null">
        #{defaultAddressId,jdbcType=BIGINT},
      </if>
      <if test="openId != null">
        #{openId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <select id="queryUserInfoByOpenId" resultMap="BaseResultMap">
    SELECT
      <include refid="Base_Column_List" />
    FROM
    tm_user a
    WHERE a.`is_del` = 0
    AND a.`open_id` = #{openId}
  </select>

  <update id="updateByPrimaryKeySelective" parameterType="com.garbage.classify.model.po.TmUser">
    update tm_user
    <set>
      <if test="uuid != null">
        uuid = #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userSex != null">
        user_sex = #{userSex,jdbcType=INTEGER},
      </if>
      <if test="userImage != null">
        user_image = #{userImage,jdbcType=VARCHAR},
      </if>
      <if test="userMobile != null">
        user_mobile = #{userMobile,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="defaultAddressId != null">
        default_address_id = #{defaultAddressId,jdbcType=BIGINT},
      </if>
      <if test="openId != null">
        open_id = #{openId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>