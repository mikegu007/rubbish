<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.garbage.classify.dao.TtEnergyGenerateMapper">
  <resultMap id="BaseResultMap" type="com.garbage.classify.model.po.TtEnergyGenerate">
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="uuid" jdbcType="VARCHAR" property="uuid" />
    <result column="energy" jdbcType="BIGINT" property="energy" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="is_del" jdbcType="INTEGER" property="isDel" />
    <result column="get_time" jdbcType="TIMESTAMP" property="getTime" />
    <result column="expire_time" jdbcType="TIMESTAMP" property="expireTime" />
  </resultMap>

  <sql id="Base_Column_List">
    id, uuid, energy, type, create_time,is_del,get_time,expire_time
  </sql>

  <insert id="insert" parameterType="com.garbage.classify.model.po.TtEnergyGenerate">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tt_energy_generate (id, uuid, energy, 
      type, create_time, is_del, 
      get_time, expire_time)
    values (#{id,jdbcType=BIGINT}, #{uuid,jdbcType=VARCHAR}, #{energy,jdbcType=BIGINT}, 
      #{type,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{isDel,jdbcType=INTEGER}, 
      #{getTime,jdbcType=TIMESTAMP}, #{expireTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.garbage.classify.model.po.TtEnergyGenerate">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tt_energy_generate
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="uuid != null">
        uuid,
      </if>
      <if test="energy != null">
        energy,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
      <if test="getTime != null">
        get_time,
      </if>
      <if test="expireTime != null">
        expire_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=BIGINT},
      <if test="uuid != null">
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="energy != null">
        #{energy,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=INTEGER},
      </if>
      <if test="getTime != null">
        #{getTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expireTime != null">
        #{expireTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  <select id="getEnergyListByUuid" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List"/>
    FROM `tt_energy_generate` a
    WHERE a.`is_del`=0
    AND a.`expire_time` &lt; NOW()
    <if test="uuid!=null">
      AND a.`uuid`=#{uuid}
    </if>
     <if test="type!=null">
       AND a.`type`=#{type}
     </if>
    limit 5
  </select>

  <select id="selectById" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List"/>
    FROM `tt_energy_generate` a
    WHERE a.`is_del`=0
    AND a.`expire_time` &lt; NOW()
    AND a.`ID`=#{id}
  </select>

  <select id="queryExpireEnergy" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    FROM
    `tt_energy_generate` a
    WHERE a.`is_del` = 0
    AND a.`get_time` IS NULL
    AND TYPE = 1
    AND DATE_ADD(a.`create_time`, INTERVAL 1 DAY) &lt; NOW() ;
  </select>

  <update id="updateBySelective" parameterType="com.garbage.classify.model.po.TtEnergyGenerate">
    update tt_energy_generate
    <set>
      <if test="isDel!=null">
        is_del = #{isDel,jdbcType=INTEGER},
      </if>
      <if test="expireTime!=null">
        expire_time = #{expireTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id=#{id,jdbcType=BIGINT}
  </update>
</mapper>